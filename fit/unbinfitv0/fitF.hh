/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef FITF
#define FITF


#include "Riostream.h"

#include <fstream>

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "RooRealVar.h"
#include <math.h>
#include "TMath.h"

#include "TStopwatch.h"

//#define FIT_METHOD1 1
#define FIT_METHOD2 1

#ifdef FIT_METHOD1
#define MAX_N_PARMS 4
#endif

#ifdef FIT_METHOD2
#define MAX_N_PARMS 4
#endif

#define MAX_NPEAKS 50


class fitF : public RooAbsPdf {
public:
  fitF() {} ;
  fitF(const char *name, const char *title,
              RooAbsReal& _x,
              RooAbsReal* _pp[]);
  fitF(const fitF& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new fitF(*this,newname); }
  inline virtual ~fitF() {
      for (int i=0;i<MAX_N_PARMS;i++)
          delete p[i];
  }

protected:
  RooRealProxy x ;
  RooRealProxy* p[MAX_N_PARMS];
  Double_t evaluate() const ;

private:
  ClassDef(fitF,1) // Your description goes here...
};

#endif
